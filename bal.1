.\" Copyright (C) Zach Flynn <zlflynn@gmail.com>, 2018  
.\" You may distribute this file under the terms of the FreeBSD Documentation License which is the text below:
\" FreeBSD Documentation License
\" Copyright 2018 Zach Flynn. All rights reserved.

\" Redistribution and use in source (Groff) and 'compiled' forms (SGML, HTML, PDF, PostScript, RTF and so forth) with or without modification, are permitted provided that the following conditions are met:

\" Redistributions of source code (Groff) must retain the above copyright notice, this list of conditions and the following disclaimer as the first lines of this file unmodified.

\" Redistributions in compiled form (transformed to other DTDs, converted to PDF, PostScript, RTF and other formats) must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

\" THIS DOCUMENTATION IS PROVIDED BY ZACH FLYNN "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ZACH FLYNN BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

.TH bal 1 2019-04-26 
.SH NAME
bal \- for keeping accounts in order and studying past spending habits
.SH SYNOPSIS
.B bal [-f FILE] [-l CODE] [-s] [-n] [COMMAND]

.SH DESCRIPTION
.B bal
keeps track of personal accounts and spending.  

.LP
Text entry at the
.B bal
console follows standard line editor conventions (it has Emacs-like
key bindings, uses the GNU readline library). To cancel a
command, type: Control-C.


.B bal's
main interactive commands are:

.TP
.BR aa
add account
.TP
.BR at
add transaction to current account
.TP
.BR et\~ [n]
edit transaction, optionally setting how many of the latest transaction numbers to list (any transaction can be chosen whether it is listed or not).
.TP
.BR lt
list most recent transactions in current account (change number to list by modifying the variable bal/number-to-quick-list).
.TP
.BR ltn
list most recent transactions in current account, prompt for number to
list
.TP
.BR ea
rename account
.TP
.BR da
delete account
.TP
.BR dt
delete transaction
.TP
.BR la
list accounts and current balances
.TP
.BR lae
list expense accounts and current balances
.TP
.BR lai
list income accounts and current balances
.TP
.BR laa
list asset accounts and current balances
.TP
.BR lal
list liability accounts and current balances
.TP
.BR bt
total accounts by type (income, expense, asset, liability)
.TP
.BR cex
total across expenditure accounts
.TP
.BR cin
total across income accounts
.TP
.BR cas
total across asset accounts
.TP
.BR cli
total across liability accounts
.TP
.BR cwo
assets - liabilities
.TP
.BR cba
current balance
.TP
.BR re
list transactions in current account matching a regular expression
.TP
.BR sa
set current account
.TP
.BR ca
display current account
.TP
.BR w
write accounts to file
.TP
.BR r
read saved accounts from file
.TP
.BR t
transfer from one account to another
.TP
.BR dtr
delete a transfer
.TP
.BR ltbd
list transactions in current account by day, prompting for the first and last day to show
.TP
.BR v
print version
.TP
.BR sd
set "current" day, changing it allows you to see how account values have changed over time 
.TP
.BR cd
print current day out in YYYY-MM-DD format
.TP
.BR baod
prints account balance over a sequence of days
.TP
.BR exod
prints total expenses as of a sequence of days
.TP
.BR inod
prints total income as of a sequence of days
.TP
.BR liod
prints total liabilities as of a sequence of days
.TP
.BR wood
prints net worth as of a sequence of days
.TP
.BR ttbd
prints total of all transactions between a sequence of days
.TP
.BR ttre
prints total of all transactions between a sequence of days matching a regular expression
.TP
.BR pl
pay a loan, allows you to split a payment between a principal account (liability account) and an interest account (an expense account)
.TP
.BR fn
print out current default save file
.TP
.BR csp
Change the stock price of current account
.TP
.BR "cal [opt]"
print out calendar, can pass a string to cal which acts like specifying options for the program cal at the command line
.TP
.BR p " " X
print X, a Scheme expression
.TP
.BR q
quit, unless -s specified, prompt to save before quit
.LP
The command prompt is a full Guile Scheme interpreter except that you do not need to enclose the outer-most expression in parenthesis. Any valid Scheme code can be executed at the prompt.  For example, typing
.B display \(dqhello\(dq
will print the text "hello".
.B bal
loads the Scheme functions in the /etc/bal.scm file at startup. These functions implement the commands above.
.LP
Of particular interest for developing your own functions in Scheme is the function
.B bal/call
which can be used to make Scheme functions interactive.
.LP
The saved file is simply a
.B tar
archive of CSV files that record transactions and characteristics of accounts.  These files are human-readable.
.LP
The prompt is whatever is returned by the evaluating the Scheme expression "(bal/prompt)" so redefining this function will customize your prompt.
.SH OPTIONS
.TP
.BR \-f " " FILE
load accounts from FILE
.TP
.BR \-l " " CODE
execute Scheme code in file CODE
.TP
.BR \-s
do not prompt to save on exit, will not save on exit
.TP
.BR \-n
do not load ~/.balrc.scm
.TP
.BR COMMAND
execute COMMAND as if it was entered at
.B bal's
prompt and then exit.  This enables you to, for example, type "bal t" to enter a new transaction (supposing your main bal file is loaded in your ~/.balrc.scm).
.SH FILES
.B bal
executes Scheme code in ~/.balrc.scm if the file is present.
.SH EXAMPLES
.TP
bal
start the bal interpreter and execute any Scheme code in ~/.balrc.scm (potentially including code to load data from a default file).
.TP
bal -f myaccounts.btar
load the file 
.B myaccounts.btar
from the current directory.
.TP
bal -s v
quits and exists after displaying version number (without prompting to save data).
.TP
bal aa
displays prompts to add new account after evaluating ~/.balrc.scm and then exits (prompting to save)
.TP
bal t
displays prompts to add new transaction after evaluating ~/.balrc.scm and then exits (prompting to save)
.TP
bal -s la
displays current account balances and quits without prompting to save.
.SH "SEE ALSO"
.SH BUGS
.TP
Please report as an issue to https://github.com/flynnzac/bal
.SH AUTHOR
Zach Flynn <zlflynn@gmail.com>
