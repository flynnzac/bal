bal
an extensible tool to keep personal accounts in order and to study past spending habits
----

Author: Zach Flynn <zlflynn@gmail.com>

---

bal is an interactive and scriptable command line personal accounting program to keep your books in order and to study past spending habits. It can be scripted and extended using Guile, a simple programming language (a Scheme dialect) from the GNU project (https://www.gnu.org/software/guile/).  Scripts can be written, for example, to automatically add transactions on the first of the month or even to update stock balances by fetching the latest stock price from the internet, or to produce custom reports on past spending habits (for example, a report of monthly spending on transactions with "coffee" in their description output to some CSV to be plotted in R).

---

When the command "bal" is entered at the command prompt, you are greated by bal's prompt.  

The main commands to add/edit/delete/list transactions and accounts are:

aa := add account
at := add transaction to current account

ea := rename account
et := edit transaction

da := delete account
dt := delete transaction

la := list accounts
lt := list transactions in current account (the last bal/number-to-quick-list transactions; by default: 10)
ltn := list transactions in current account, prompt for number to list

bt := total accounts by type (income, expense, asset, liability)

re := list transactions in current account matching a regular expression

sa := set current account
ca := display current account

w := write out a saved bal file
r := read in a saved bal file

---

At the prompt, any Scheme function can be entered (except that the usual outside parenthesis should be omitted; for example - display "hello, world" - is translated into the Scheme command - (display "hello, world") - and prints "hello, world").  But you do not need to know any Scheme to use bal, just to extend it.  In fact, the above commands are just Scheme functions, mostly using the function "bal/call" to prompt for the options the program needs.

---

The command has two options:

-f file := specify a file to load data from (specify it without the ".btar" extension; to load "zach.btar", type -f zach)

-l file := load user-written Guile Scheme functions from file

-s := do not prompt to save on exit, for use in scripting

If you specify any other text as an argument to bal, it will execute the text as if it were entered at the command prompt and then exit (prompting to save the result unless -s is given).

---

The source code is a single C file (bal.c) which has some Scheme in it as well.  It is about 1850 lines of code as of 2018-10-09.

If you find yourself wanting to write an extension that has a similar feel to the main editing commands, see the function "bal_standard_functions ()" in the C source code and the "bal_call" C function/the "bal/call" Scheme function.

bal/call has the following format:

(bal/call "function name to call" (list (cons "Account" "account") (cons "File" "string") ...))

Where the first option is the function name to call and the second is a list with pairs giving the command prompt to print to ask for input and the second argument specifies the type of argument.

---

bal is Free Software, licensed under the terms of the GPL version 3.  You are free to modify and redistribute the software so long as you allow others to do so as well.

---

To compile bal, type: make

bal depends on libreadline, libcsv, libguile, and libgc.

