bal's website: http://zflynn.com/bal
Man Page
---
bal(1)			    General Commands Manual			bal(1)



NAME
       bal - for keeping accounts in order and studying past spending habits

SYNOPSIS
       bal [-f FILE] [-l CODE] [-s] [-n] [COMMAND]


DESCRIPTION
       bal  keeps  track  of personal accounts and spending.  It is extensible
       using Guile Scheme, a full programming language, so that it is easy  to
       build  custom  reports  about  your past transactions and to script the
       program to automatically add or update transactions when certain condi-
       tions  are  met	(you  could,  say,  write  a piece of Scheme code that
       fetches the latest stock price and updates the current  value  of  your
       shares).


       Text  entry at the bal console follows standard line editor conventions
       (it has Emacs-like key bindings, uses the  GNU  readline  library).  To
       cancel a command, type: Control-C.


       bal's main interactive commands are:


       aa     add account

       at     add transaction to current account

       ea     rename account

       et [n] edit  transaction,  optionally  setting  how  many of the latest
	      transaction numbers to  list  (any  transaction  can  be	chosen
	      whether it is listed or not).

       da     delete account

       dt     delete transaction

       t      transfer from one account to another

       pl     pay  a  loan,  allows you to split a payment between a principal
	      account (liability account) and an interest account (an  expense
	      account)

       la     list accounts and current totals

       lt     list  most recent transactions in current account (change number
	      to list by modifying the variable bal/number-to-quick-list)

       ltn    list most recent transactions in	current  account,  prompt  for
	      number to list

       ltbd   list  transactions  in current account by day, prompting for the
	      first and last day to show

       bt     total accounts by type (income, expense, asset, liability)

       re     list transactions in current account matching a regular  expres-
	      sion

       sa     set current account

       ca     display current account

       w      write accounts to file

       r      read saved accounts from file

       p X    print X, a Scheme expression

       q      quit, unless -s specified, prompt to save before quit

       v      print version

       sd     set  "current"  day,  changing  it allows you to see how account
	      values have changed over time because bt and la  will  now  show
	      before and after this day.

       cd     print current day out in YYYY-MM-DD format

       baod   prints account balance over a sequence of days

       exod   prints total expenses as of a sequence of days

       inod   prints total income as of a sequence of days

       liod   prints total liabilities as of a sequence of days

       wood   prints net worth as of a sequence of days

       ttbd   prints total of all transactions between a sequence of days

       The  command  prompt is a full Guile Scheme interpreter except that you
       do not need to enclose the outer-most expression in parenthesis so  any
       valid  Scheme  code can be executed at the prompt.  For example, typing
       display "hello" will, in fact, print the text "hello".	See  the  full
       reference  manual  for documentation of Scheme functions that allow you
       to manipulate transactions and accounts in Scheme.

       Of particular interest for developing your own functions in  Scheme  is
       the function bal/call which can be used to make Scheme functions inter-
       active.

       The saved file is simply a tar archive of CSV files that record	trans-
       actions	and  characteristics of accounts.  These files are human-read-
       able.

       The prompt is whatever is returned by the evaluating the Scheme expres-
       sion  "(bal/prompt)"  so  redefining  this function will customize your
       prompt.

OPTIONS
       -f FILE
	      load accounts from FILE where FILE omits the .btar extension

       -l CODE
	      execute Scheme code in file CODE

       -s     do not prompt to save on exit, will not save on exit

       -n     do not load ~/.balrc.scm

       COMMAND
	      execute COMMAND as if it was entered at bal's  prompt  and  then
	      exit.  This enables you to, for example, type "bal t" to enter a
	      new transaction (supposing your main bal file is loaded in  your
	      ~/.balrc.scm).

FILES
       bal executes Scheme code in ~/.balrc.scm if the file is present.

EXAMPLES
       bal    start  the  bal  interpreter  and  execute  any  Scheme  code in
	      ~/.balrc.scm (potentially including code to  load  data  from  a
	      default file).

       bal -f myaccounts
	      load the file myaccounts.btar from the current directory.

       bal -s v
	      quits  and  exists  after  displaying  version  number  (without
	      prompting to save data).

       bal aa displays	prompts  to   add   new   account   after   evaluating
	      ~/.balrc.scm and then exits (prompting to save)

       bal t  displays	 prompts  to  add  new	transaction  after  evaluating
	      ~/.balrc.scm and then exits (prompting to save)

       bal -s la
	      displays current account balances and quits without prompting to
	      save.

SEE ALSO
BUGS
       Please report as an issue to https://github.com/flynnzac/bal

AUTHOR
       Zach Flynn <zlflynn@gmail.com>



				  2018-10-26				bal(1)
